---
- name: "PowerProtect Data Manager image backup demo"
  hosts: localhost
  collections:
    - community.general
  become: no
  gather_facts: false
 
  vars:
    policy_name: POLICY-VM01
  vars_files:
    - vars/credentials.yml

  tasks:
# WAIT FOR HTTPS RESPONSE FROM POWERPROTECT DATA MANAGER  
  - name: "( {{ppdm_host}} ): Wait for HTTPS connectivity"
    wait_for:
      host: "{{ppdm_host}}."
      port: 443
      state: started
      delay: 1
      sleep: 60
      timeout: 600
    register: waitforppdm

# AUTHENTICATE TO THE POWERPROTECT REST API & GRAB ACCESS TOKEN
  - name: "( {{ppdm_host}} ): Authenticate to PowerProtect DM REST API"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/login
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      body:
        username: "{{ppdm_id}}"
        password: "{{ppdm_pwd}}"
      status_code: 200
    register: token
    
  - name:
    debug:
      var: token.json.access_token

# GET THE VIRTUAL MACHINE POLICY
  - name: "( {{ppdm_host}} ): Get the virtual machine protection policies LIKE {{policy_name}}"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/protection-policies?filter=name%20lk%20%22{{policy_name}}%25%22
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: GET
      validate_certs: no
      return_content: yes
      body_format: json
    register: policies

# START VIRTUAL MACHINE BACKUPS
  - name: "( {{ppdm_host}} ): Start backup for protection policies LIKE {{policy_name}}"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/protection-policies/{{item.id}}/protections
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      body: |
          {
              "assetIds": null,
              "stages": [
                  {
                      "id": "{{ item.stages[0].id }}",
                      "retention": {
                          "interval": 10,
                          "unit": "DAY"
                      },
                      "operation": {
                          "backupType": "FULL"
                      }
                  }
              ]
          }
      status_code: 202   
    with_items: "{{ policies.json.content | json_query( '[*]' ) }}"
    register: start_backups

# LOGOUT OF THE REST API
  - name: "( {{ppdm_host}}): Logout of the REST API"
    uri:
      url: https://{{ppdm_host}}:8443/api/v2/logout
      headers:
        Authorization: "Bearer {{token.json.access_token}}"
        Content-Type: "application/json"
      method: POST
      validate_certs: no
      return_content: yes
      body_format: json
      status_code: 204