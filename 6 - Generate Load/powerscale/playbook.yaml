---
# tested with ansible 2.14.3 on Ubuntu 22.04.1 LTS, master and workers running centos 7
# martin.flint@dell.com

- hosts: all
  become: true

  vars:
    - fio_namespace: "fio-powerscale"
    - storage_class: "powerscale"
    - replica_count: "1"

  tasks:


  - name: Create namespace "{{ fio_namespace }}" on master
    when: inventory_hostname in groups['k8s_master']
    command: "kubectl create ns {{ fio_namespace }}"

  - name: Generate config.yaml
    when: inventory_hostname in groups['k8s_master']
    copy: 
      content: |
        kind: ConfigMap
        apiVersion: v1
        metadata:
          name: fio-job-config
        data:
          fio.job: |-
            [global]
            ioengine=psync
            direct=1
            buffered=0
            size=10G
            iodepth=1000
            numjobs=100
            group_reporting
            refill_buffers
            rwmixread=80
            norandommap
            randrepeat=0
            percentage_random=0
            bs=512K
            buffer_compress_percentage=50
            rw=read
            [testjob]
      dest: "/tmp/config.yaml"
      mode: 0777


  - name: Create secret in namespace "{{ fio_namespace }}" on master
    when: inventory_hostname in groups['k8s_master']
    command: "kubectl create -f /tmp/config.yaml -n {{ fio_namespace }}"

  - name: Remove file /tmp/config.yaml
    when: inventory_hostname in groups['k8s_master']
    ansible.builtin.file:
      path: /tmp/config.yaml
      state: absent

  - name: Generate stateful set namespace "{{ fio_namespace }}"
    when: inventory_hostname in groups['k8s_master']
    copy:
      content: |
        ---
        apiVersion: apps/v1
        kind: StatefulSet
        metadata:
          name: fio
        spec:
          serviceName: fio
          replicas: {{ replica_count }}
          selector:
            matchLabels:
              app: fio
          template:
            metadata:
              labels:
                app: fio
            spec:
              containers:
              - name: fio
                image: joshuarobinson/fio:3.19
                command: ["fio"]
                args: ["/configs/fio.job", "--eta=never", "--filename_format=$jobnum.$filenum", "--directory=/scratch/"]
                volumeMounts:
                - name: fio-config-vol
                  mountPath: /configs
                - name: fio-data
                  mountPath: /scratch
              volumes:
              - name: fio-config-vol
                configMap:
                  name: fio-job-config
          volumeClaimTemplates:
          - metadata:
              name: fio-data
            spec:
              storageClassName: {{ storage_class }}
              accessModes:
              - ReadWriteOnce
              resources:
                requests:
                  storage: 4Ti
      dest: "/tmp/fio-powerstore.yaml"
      mode: 0777


  - name: Deploy fio stateful set in namespace "{{ fio_namespace }}" on master
    when: inventory_hostname in groups['k8s_master']
    command: "kubectl create -f /tmp/fio-powerstore.yaml -n {{ fio_namespace }}"

  - name: Remove file /tmp/fio-powerstore.yaml on master
    when: inventory_hostname in groups['k8s_master']
    ansible.builtin.file:
      path: /tmp/fio-powerstore.yaml
      state: absent


  - name: Create file /root/fio-scaleup.sh on master
    when: inventory_hostname in groups['k8s_master']
    copy:
      content: |
        #!/bin/sh 
        for i in `seq 20`
        do 
          for NS in `kubectl get ns | grep "^fio-" | awk '{ print $1 }'`
          do
            echo setting replicas to $i for namespace $NS
            kubectl scale --replicas=$i deployment.apps/fio -n $NS
          done
          sleep 30
        done
      dest: "/root/fio-scaleup.sh"
      mode: 0755


  - name: you can scale up or down the set on the master by running the command 'kubectl scale --replicas=X statefulset.apps/fio -n {{ fio_namespace }}'
    when: inventory_hostname in groups['k8s_master']
    debug:
      msg: you can scale up or down the set on the master by running the command 'kubectl scale --replicas=X statefulset.apps/fio -n {{ fio_namespace }}'
    delegate_to: localhost
    
