- name: Data Domain Playbook.
  hosts: dd
  connection: local
  gather_facts: false

  vars_files:
    - vars/credentials.yaml

  tasks:

# DEPLOY THE DDVE IN VCENTER, didn't deploy the OVA because it takes too long configuring SSL keys on first boot
    - name: "Deploy Virtual Machine  {{vmname}}"
      vmware_guest:
        hostname: "{{ vc_hostname }}"
        username: "{{ vc_username }}"
        password: "{{vc_password }}"
        validate_certs: "{{ validate_certs }}"
        name: "{{ vmname }}"
        template: "{{ vm_template }}"
        datacenter: "{{ datacenter }}"
        esxi_hostname: "{{ esxi_host }}"
        folder: 'vm'
        datastore: "{{ datastore }}"
        state: poweredon

# WAIT FOR HTTPS RESPONSE FROM POWERPROTECT DATA DOMAIN
    - name: " {{vmname}} - Waiting for HTTPS connectivity."
      wait_for:
        host: "{{ddve_ip}}"
        port: 443
        state: started
        delay: 1
        sleep: 60
        timeout: 600
      register: waitforddve

    - name: Set email address for alerts, detailed-autosupport and daily alert summary emails
      dellemc.datadomain.config:
        state: set
        option: admin-email
        admin-email: "{{ email }}"

    - name: Set the administrative host
      dellemc.datadomain.config:
        state: set
        option: location
        location: 'Limerick CSC' # This could be RACK location

    - name: Set the mail (SMTP) server
      dellemc.datadomain.config:
        state: set
        option: mailserver
        mailserver: '10.204.20.2' # SMTP server IP/hostname

    - name: Set the timezone 
      dellemc.datadomain.config:
        state: set
        option: timezone
        timezone: 'US/Eastern'

    - name:  Create a filesystem on active tier storage
      dellemc.datadomain.filesys:
          state: create

    - name:  Enable filesystem Operations
      dellemc.datadomain.filesys:
          state: enable

    - name:  Set the Schedule
      dellemc.datadomain.filesys:
          state: set
          operation: clean
          clean:
              schedule: 'daily 03:00'

    - name: Create a MTree
      dellemc.datadomain.mtree:
          state: create
          mtree-path: /data/col1/backupserver01
          quota:
              quota-soft-limit: 200 GiB
              quota-hard-limit: 250 GiB

    - name: Enable NFS clients to connect
      dellemc.datadomain.nfs:
          state: enable
        
    - name: Create an export, optionally add clients
      dellemc.datadomain.nfs:
          state: create
          export-name: backupserver01
          path: /data/col1/backupserver01
          clients: 10.204.20.0/24
          options: 'rw,no_root_squash,no_all_squash,secure'
          # Even if Path does not exists, nfs share will be created. So use MTree module to create it.


    - name: Enable ddboost
      dellemc.datadomain.ddboost:
          state: enable

    - name:  Add a new ddboost user
      dellemc.datadomain.users:
          state: add
          user-name: dtw-boost
          role-name: admin
          user-password: "{{ dd_password }}"
          dd-password: "{{ dd_password }}"

    - name: Create the ddboost storage unit
      dellemc.datadomain.ddboost:
          state: create
          storage-unit: storage_unit-test
          user-name: dtw-boost
          ## Optional parameters
          quota:
              quota-soft-limit: 10 GiB
              quota-hard-limit: 15 GiB
              report-physical-size: 10 GiB
          stream-limit:
              write-stream-soft-limit: 10 # or none - remove limit
              read-stream-soft-limit: 15 # or none - remove limit
              repl-stream-soft-limit: 13 # or none - remove limit
              combined-stream-soft-limit: 20 # or none - remove limit
              combined-stream-hard-limit: 20 # or none - remove limit          

    - name: Assign the username to the ddboost protocol
      dellemc.datadomain.ddboost:
          state: assign
          user-name: dtw-boost

# enabel DDbost protocol
# set passphrase?

